Ralf per Codeplex (13.03.)
==========================
- Bitte dreifach-Operationen vereinfachen (also bei der ganzen Achsen-Trennung)

Lassi per Codeplex (17.03.)
===========================
2) Noch ein Fehler bei der Berechnung
   "powerdirection += ExternalForce;" müsste "powerdirection += externalpower;" sein

Andy via Email (07.04.)
=======================
- Game States (Loading, Playing, Saving) einführen

Nachtrag von Ralf per Email (16.04.)
====================================
Begrifflichkeiten im Cache irreführend. Sinnvolle wären die typischen Werte get(), put(), replace(), remove(), putIfAbsent()

RedworkDE via YouTube (11.04.)
==============================
- Bug in L2 wenn man aus dem Level fällt

Andy via Email (10.04.)
=======================
- Liste "ActiveChunkRenderer" ist inzwischen unnötig
- InUse kann auf chunk!=null gemappt werden
- ChunkRenderer erst erzeugen, wenn gebraucht wird

Tom (14.04.)
============
- Speicherüberlauf in der Grafikkarte -> Absturz des GraKa-Treibers
  * Speicher-Profiling in der GraKa
  * VB und IB-Recycling?

Andy via Email (14.04.)
=======================
- Recycling für die Cache-Objekte
- Performancen-Frage bei OrderBy im Cache (ermittlung des ältesten Elements) -> Alternative eine verkettete Liste als Queue
- Performance-Frage bei Ermittlung des ElapsedMilliseconds der StopWatch. int++ schneller

Ralf via Email (15.04.)
=======================
- Ausgabe auf die Console nicht wirklich cool. Einbindung von log4net
- evtl. Caching-Framework (ehcache.org)

Andy via Email (16.04.)
=======================
- 2-Level Cache hat ein Problem: L1 könnte Elemente halten die von L2 schon entfernt wurden

RedworksDE @ YouTube (20.04.)
=============================
- Anstatt !cache.Contains() und cache.Add() tuts auch cache[index] = value;

Lassi @ Youtube (21.04.)
========================
- Kollision Property für Blocks
- Besseres Transparenz-Handling für Wasserblocks

Sansero Games @ YouTube (21.04.)
================================
- Dynamische Nebelweite in Abhängigkeit der geladenenen Chunks

Andy @ Email (20.04.)
=====================
x Lock taugt immernoch nichts, sollte Eintrag nicht im Cache sein
- Deserialisierung wird ärger machen, wenn wir in einen recycle-Chunk schreiben (da wir 0-Blocks nicht wirklich mit null setzen)
- L1- und L2-Cache unnötig
- Set-Methode im Cache -> private Set ohne Lock, public Set mit lock und Aufruf auf private Set

Ralf @ Email (20.04.)
=====================
- Neue dll-Lösung (Monogame mit ins Repository) ist nicht so smart für Linux-User
- DisablePersistence vom Namen her blöd. EnablePersistence

Ralf @ Email (25.05.)
=====================
- Kollision zwecks besserer testbarkeit auslagern
- Intersects zusammen fassen (Pickray und Boundingbox)
- Intersects mit Result-Struct (distanz, Axe, Einschlagspunkt?)
- Überlagerung mehrerer Kollisionsachsen (bsp: X & Y)
- Funktion "move *= (1f - min);" muss mit negativen Werten arbeiten können!

Susch @ YouTube (25.05)
=======================
- Boden-Glitsch passiert, weil die Prüfung im ActorHost  "Min.X > max" lautet. Sollte aber "Min.X >= max" sein
- Wand-Glitsch beginnt schlagartig bei Koordinate 1000/1000. 999 ist ok

Ralf @ Email (17.06)
====================
- Left/Right -> NumPad+/- oder Bild hoch/runter
- SlotLeft/Right -> +1 für Integer
- Mapping der Nummern nicht D0-9 sondern NumPad0-9

Andy @ Email (17.08)
====================
- Trigger-Klasse anstatt den Trigger-Mechanismus jedes mal
- Konvertierungsumweg über PNG kostet performance -> lieber BMP
- 

Cleanup
=======
- Texture (Mehrteilig)
- Friction (Auf Block-Instanz)
- Angle-Klasse
- Chunkgröße auf 16 runter? Oder dynamisch machen
- ExtensionLoader
- InstanceManager fur Universe, Planet, 
- Persistierung von Chunks bereits beim Erzeugen?
- -> SimpleNoiseGenerator, line 162, serialisieren
- Smartere Priorisierung der ChunkRenderer (Neusortierung nach jedem Chunk, dann fällt auch die Highprio-Liste raus)
